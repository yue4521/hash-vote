[tool.black]
line-length = 79
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 79
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hash-vote"
version = "1.3.0"
description = "Proof-of-Work voting system using blockchain technology"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "yue4521" }
]
requires-python = ">=3.8"
dependencies = []
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[tool.setuptools.packages.find]
include = ["app*"]
exclude = ["tests*", "sql*"]

# セキュリティツール設定
[tool.bandit]
exclude_dirs = ["/tests/", "/venv/", "/build/", "/dist/"]
skips = ["B101"]  # assert_used - テストでのassertは許可
severity = "medium"

[tool.bandit.blacklist_calls]
bad_name_sets = [
    {
        names = ["pickle", "cpickle", "dill"],
        message = "Pickle modules are insecure for untrusted data"
    }
]

[tool.semgrep]
config = ["auto", "p/security-audit", "p/python"]
exclude = [
    "tests/",
    "venv/",
    "*.pyc",
    "__pycache__/",
]
severity = ["ERROR", "WARNING"]

[tool.pip-audit]
# 脆弱性の重要度設定
desc = true
format = "json"
output = "audit-results.json"
vulnerability-service = "pypi"

[tool.safety]
full_report = true
output = "json"
ignore = []  # 無視するCVE IDがあればここに追加

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "setup.py",
    "console_main.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]